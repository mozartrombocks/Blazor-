@page "/base64converter"

<h1>Base 64 Converter</h1>

<div class="form-group">
    <textarea class="form-control col-md-6" placeholder="Non Base64" @bind-value="NonBase64Body" @bind-value:event="oninput"></textarea>
    <small class = "form-text text-muted">This is the value you want to encode as base64</small>
</div>

<button class="btn btn-primary" type="button" @onclick="ConvertToBase64">
        <span class= "oi oi-arrow-thick-bottom"></span> Encode
</button> 

<button class="btn btn-success" type="button" @onclick="ConvertFromBase64">
        <span class= "oi oi-arrow-thick-top"></span> Decode
</button>

<div class="form-group">
    <textarea class="form-control col-md-6" placeholder="Base64" @bind-value="Base64Body" @bind-value:event="oninput"></textarea>
    <small class="form-text text-muted">This is the value you want to encode from base64</small>
</div>

@code{
    public string NonBase64Body { get; set; } 
    public string Base64Body { get; set; }

    private void ConvertToBase64() 
    {   
        if (String.IsNullOrEmpty(NonBase64Body)) throw new ArgumentNullException(nameof(Base64Body));
        var plainTextByte = Encoding.UTF8.GetBytes(NonBase64Body);
        Base64Body = Convert.ToBase64String(plainTextByte); 
    }

    private void ConvertFromBase64()
    {
        if (String.IsNullOrEmpty(Base64Body)) throw new ArgumentNullException(nameof(NonBase64Body));
        var plainTextByte = Encoding.UTF8.GetBytes(Base64Body); 
        NonBase64Body = Convert.ToBase64String(plainTextByte);
    }

}


